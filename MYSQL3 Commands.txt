show databases;
use employeesdb;
SELECT Database();

CREATE TABLE t_index(  
   col1 INT PRIMARY KEY,  
   col2 INT NOT NULL,  
   col3 INT NOT NULL,  
   col4 VARCHAR(20),  
   INDEX (col2,col3)   
);  

CREATE INDEX ind_1 ON t_index(col4);  
SELECT * FROM t_index;

SELECT IF(200>350,'YES','NO'); 
SELECT IF(251 = 251,' Correct','Wrong');   

SELECT IFNULL("Hello", "javaTpoint");  

DELIMITER $$  
CREATE PROCEDURE myResult(original_rate NUMERIC(6,2),OUT discount_rate NUMERIC(6,2))  
     NO SQL  
      BEGIN  
         IF (original_rate>200) THEN  
            SET discount_rate=original_rate*.5;  
        ELSE  
            SET discount_rate=original_rate;  
         END IF;  
         select discount_rate;  
     END$$  
DELIMITER ;  

set @p = 150;  
set @dp = 180;
call myResult(@p, @dp);  


SELECT * from Orders;

SELECT * from Orders Group by Person_ID;

SELECT *, count(*) from Orders group by Person_ID;

SELECT *, count(*) from Orders group by Person_ID having Person_ID = 2;

SELECT * from Orders limit 4;

SELECT * from Orders where Order_ID =1;

SELECT * from Orders where Order_ID > 2 and Person_ID >= 3;

SELECT * from Orders where Order_ID = 1 OR Person_ID = 1;

SELECT * from Orders where (Order_ID > 2 and Person_ID > 2) or Order_Num = 111;

SELECT distinct Person_ID from Orders;

SELECT * from Orders Order by Person_ID asc;

SELECT * from Orders Order by Person_ID desc;

SELECT * from Orders where Person_ID < 2 order by Person_ID;

SELECT * from Orders where Person_ID < 3 order by Order_Num;

SELECT *, sum(Person_ID) from Orders group by Person_ID;

SELECT *, sum(Order_Num) from Orders group by Person_ID;

SELECT *, min(Order_Num) from Orders group by Person_ID;

SELECT *, min(Order_Num) as Minimum_Order_num from Orders group by Person_ID;

SELECT *, max(Order_Num) as Max_Order_num from Orders group by Person_ID;

SELECT *, Avg(Order_Num) as avg_Order_num from Orders group by Person_ID;

SELECT *, sum(Order_Num) from Orders where Person_ID >= 2 group by Person_ID having Order_Num >= 222;


